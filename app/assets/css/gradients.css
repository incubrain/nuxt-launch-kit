/* Remove old individual utilities, replace with base + specific pattern */
@source inline("i-gradient-{linear,radial,conic,mesh,spotlight,shimmer}-{primary,secondary,success,warning,error,info,neutral}");

/* Remove old individual utilities, replace with base + specific pattern */
@source inline("i-gradient-{linear,radial,conic,mesh,spotlight,shimmer}-{primary,secondary,success,warning,error,info,neutral}");

/* ðŸ”¥ IMPROVED: Better color mixing and smoother transitions */

@utility i-gradient-linear-* {
  --gradient-from: --value(--color-*);
  
  background: linear-gradient(
    var(--gradient-angle, 135deg),
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 100%), transparent) 0%,
    color-mix(in srgb, var(--gradient-to, var(--gradient-from)) calc(var(--gradient-opacity, 0.2) * 80%), transparent) 100%
  );
}

@utility i-gradient-radial-* {
  --gradient-from: --value(--color-*);
  
  background: radial-gradient(
    ellipse 800px 600px at var(--gradient-position, center),
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 100%), transparent) 0%,
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 40%), transparent) 50%,
    transparent 80%
  );
}

@utility i-gradient-conic-* {
  --gradient-from: --value(--color-*);
  
  background: conic-gradient(
    from var(--gradient-angle, 0deg) at var(--gradient-x, 50%) var(--gradient-y, 50%),
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 100%), transparent) 0deg,
    color-mix(in srgb, var(--gradient-to, var(--gradient-from)) calc(var(--gradient-opacity, 0.2) * 80%), transparent) 120deg,
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 60%), transparent) 240deg,
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 100%), transparent) 360deg
  );
}

@utility i-gradient-mesh-* {
  --gradient-from: --value(--color-*);
  
  background: 
    radial-gradient(
      circle at 15% 25%, 
      color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 100%), transparent) 0%, 
      transparent 50%
    ),
    radial-gradient(
      circle at 85% 75%, 
      color-mix(in srgb, var(--gradient-to, var(--gradient-from)) calc(var(--gradient-opacity, 0.2) * 90%), transparent) 0%, 
      transparent 50%
    ),
    radial-gradient(
      circle at 45% 85%, 
      color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 70%), transparent) 0%, 
      transparent 40%
    ),
    radial-gradient(
      circle at 75% 15%, 
      color-mix(in srgb, var(--gradient-to, var(--gradient-from)) calc(var(--gradient-opacity, 0.2) * 60%), transparent) 0%, 
      transparent 45%
    );
}

@utility i-gradient-spotlight-* {
  --gradient-from: --value(--color-*);
  
  background: radial-gradient(
    circle 1000px at var(--gradient-x, 50%) var(--gradient-y, 50%),
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 100%), transparent) 0%,
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 30%), transparent) 40%,
    transparent 70%
  );
}

@utility i-gradient-shimmer-* {
  --gradient-from: --value(--color-*);
  
  background: linear-gradient(
    90deg,
    transparent 0%,
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 60%), transparent) 30%,
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 100%), transparent) 50%,
    color-mix(in srgb, var(--gradient-from) calc(var(--gradient-opacity, 0.2) * 60%), transparent) 70%,
    transparent 100%
  );
  background-size: 200% 100%;
  animation: var(--animate-shimmer);
}
